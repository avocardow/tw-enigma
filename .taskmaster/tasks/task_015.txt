# Task ID: 15
# Title: Develop automatic CSS injection for HTML files
# Status: done
# Dependencies: 13
# Priority: medium
# Description: Create a system to automatically inject the generated CSS file reference into HTML files.
# Details:
1. Extend src/htmlRewriter.js
2. Implement function to inject <link> tag
3. Handle various HTML structures (head presence, existing styles)
4. Calculate relative path for CSS reference
5. Preserve original formatting and doctype
6. Implement checks to prevent duplicate injections

# Test Strategy:
Unit tests for various HTML structures and injection scenarios

# Subtasks:
## 1. Set up HTML rewriter foundation [done]
### Dependencies: None
### Description: Create the basic structure for the HTML rewriter that will be used to inject link tags
### Details:
Initialize a JavaScript module for HTML parsing and manipulation. Set up the project structure with necessary dependencies using npm or yarn. Create the main rewriter class with basic DOM manipulation capabilities. Implement error handling for malformed HTML input.

## 2. Implement link tag injection mechanism [done]
### Dependencies: 15.1
### Description: Develop functionality to inject link tags into HTML documents at appropriate locations
### Details:
Create methods to generate proper link tag syntax for CSS files. Implement logic to identify the best insertion point in the HTML head section. Handle edge cases like missing head tags or existing link tags. Add support for different link tag attributes (rel, type, media queries).

## 3. Develop HTML structure analysis [done]
### Dependencies: 15.1
### Description: Create functionality to analyze and handle various HTML structures and document types
### Details:
Implement detection for different HTML doctype declarations. Create handlers for various HTML structures (HTML5, XHTML, etc.). Add support for handling special cases like single-page applications. Develop methods to safely traverse and modify the DOM without breaking existing functionality.

## 4. Build path calculation system [done]
### Dependencies: 15.2
### Description: Create a system to calculate and resolve relative and absolute paths for CSS resources
### Details:
Implement path resolution algorithms for different scenarios (relative, absolute, root-relative). Create utilities to handle path normalization and simplification. Add support for handling URLs with query parameters and fragments. Develop fallback mechanisms for invalid or inaccessible paths.

## 5. Implement formatting preservation [done]
### Dependencies: 15.1, 15.3
### Description: Ensure the HTML rewriter preserves original document formatting and structure
### Details:
Create methods to preserve indentation and line breaks in the original HTML. Implement whitespace handling that respects the original document style. Add options for formatting preferences (minified vs. pretty). Develop tests to verify formatting is maintained across different HTML structures.

## 6. Add duplicate detection and prevention [done]
### Dependencies: 15.2, 15.4
### Description: Implement mechanisms to detect and prevent duplicate link tags and CSS injections
### Details:
Create a registry system to track injected resources. Implement comparison algorithms to detect duplicate or equivalent CSS references. Add options for handling duplicates (skip, replace, merge). Develop reporting functionality to notify about potential duplicates or conflicts.

